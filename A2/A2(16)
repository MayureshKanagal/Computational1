#include <stdio.h>
#include <math.h>


double derivative(double t, double y) {
    return y - t * t + 1;
}


double exact_solution(double t) {
    return pow(t + 1, 2) - 0.5 * exp(t);
}

int main() {
    double t0 = 0;     // Initial time
    double y0 = 0.5;   // Initial value of y
    double t_max = 2;  // Desired final time
    double h = 0.1;    // Step size

    double t = t0;
    double y = y0;

    printf("Step\tt\tApproximate y\tExact y\t\tError\t\tError Bound\n");
    printf("------------------------------------------------------------\n");

    while (t < t_max) {
    
        y = y + h * derivative(t, y);

   
        double exact_y = exact_solution(t);

        double error = fabs(exact_y - y);

        double error_bound = 0.5 * h * (1 + t + y); 

        printf("%d\t%.2f\t%.4f\t\t%.4f\t\t%.6f\t%.6f\n", (int)((t - t0) / h), t, y, exact_y, error, error_bound);

        t += h;
    }

    return 0;
}
